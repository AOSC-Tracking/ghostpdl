   Copyright (C) 1996, 1997 Aladdin Enterprises.  All rights reserved.
   Unauthorized use, copying, and/or distribution prohibited.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

This file, NEWS-5, describes the changes in the most recent releases of
Aladdin's PCL 5 code, in reverse chronological order.

Fileset of 1/8/97
=================

PCL
---

Fixes bugs:
	- (LPD) The Paper Source command (ESC & l <source> H) did an
unconditional page eject instead of a conditional one.  (pcpage.c)
	- (HAS) The computation of logical page size had the height and
width interchanged.  (pcdraw.c)

(LPD) Changes the second argument of pcl_end_page from a Boolean to an
enumerated type for easier reading.  (pcommand.h, pcjob.c, pcpage.c,
pcstatus.c, pcursor.c, rtmisc.c)

(LPD) Changes the name of the end_page procedure in the PCL state to
finish_page, to avoid confusion with pcl_end_page.  (pcstate.h, pcmain.c,
pcpage.c)

Sun Jan  5 1997 Dick Dunn (rcd@talisman.com)

    pcl5.mak
	Add definition, references to pcsymbol_h

    pldict.h
	Add pl_dict_length() to find active size of a dictionary

    pldict.c
	Add pl_dict_length() to find active size of a dictionary

    plfont.h
	Change condition on defining pl_load_tt_font to make it more robust.

    plsymbol.h
	Resolve common definitions of symbol maps _vs_ symbol sets.
	Add a length value for built-in symbol maps.
	Remove unneeded definitions.

    plsymbol.c
	Adapt to symbol-set/map distinction.
	Add procedures to find a symbol map and to check whether a font
	supports a symbol set.

    pcfont.h
	Make the decache-font procedure visible, since it must be called
	from some non-font code that forces re-selection.

    pcfont.c
	Make pcl_decache_font global (above).
	Implement correct tests for selection on symbol set.
	Record symbol map to be used.
	Move font-initialization hack here (from pcsfont.c).

    pcsfont.c
	Move font-initialization hack out to pcfont.c

    pcstatus.c
	Implement symbol-set listing.
	Implement listing of symbol sets for font-extended.

    pcsymbol.h
	New file: definitions for PCL5 symbol sets, not shared with XL.

    pcsymbol.c
	Move local definition of symbol set out to pcsymbol.h.
	Remove entity header from symbol set; reflects symbol set/map
	distinction.
	Decache fonts when symbol sets change.
	Add procedures to find a symbol map and to check whether a font
	supports a symbol set.

    pcmain.c
	Make built-in font initialization hack explicit.

    pcstate.h
	Add symbol maps to fonts selected and current font.

HP-GL/2
-------

Sun Jan  5 21:09:50 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgpoly.c (hpgl_wedge): added PU to current position at the
	beginning of the wedge, this guarantess the path begins with a
	moveto. 

Sat Jan  4 01:16:45 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_set_clipping_region): disabled clipping region
 	temporarily as it does not seem to be interacting with rotation
 	correctly.

	* pgframe.c (pcl_vert_pic_frame_size_decipoints): updated picture
	frame implicit

	* pgstate.h: added state variable to indicate implicit execution
	of Set Picture Frame Anchor Point.  The semantics differ explicit
	vs. implicit execution *** PETER *** you may want to handle this
	differently.  Please let me know.

Fri Jan  3 00:13:05 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_draw_current_path): removed unused variable which
	was used by gs_currentpoint() which has been removed.
	(hpgl_set_graphics_dash_state): fixed problem where gs dashed line
	state was being maintained while the hpgl state line state changed
	to solid.  *** PETER *** Should we do an "initgraphics" for
	pcl/gl/2 resets?

	* pgconfig.c (hpgl_RO): implemented, see code comments for
	potential problem.

	* pgstate.h: added state variable to indicate that we have the
	initial moveto in the path.  (see previous entry for details)

	* pgdraw.c (hpgl_draw_current_path): replaced call to get the
 	current point to use the state positiion in GL/2.  Change due to
 	preference, does not fix anything.
	(hpgl_draw_current_path): RO implementation revealed problem with
 	clearing the current path with only a moveto.  Does not work with
 	gs graphics as the path does not get created until later.
	(hpgl_add_point_to_path): added code to maintain state variable
 	pgls->g.have_first_moveto.

	* pgconfig.c (hpgl_RO): added default angle of 0 degrees, the
	previous arrangement had angle uninitialized if RO had no args.

	* pgvector.c (hpgl_PE): **PETER** the PE command must save and
 	restore the !relative pen state! upon entry and completion.  I
 	have added hpgl_save(restore)_pen_relative_state to pgmand.h.  As
	I understand things this must be done in the parser.  So I shall
	leave it to you for now.
	(hpgl_PE): corrected bug in PE code - the PE flag for SP must be
	ignored in polygon mode as SP is an illegal command.


Thu Jan  2 23:35:58 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgstate.h (hpgl_save_pen_relative_state): provided parenthesis
	and renamed macros to save and restore postion, relative state and
	down state.

	* pgvector.c (hpgl_PU): added check for relative state.
	             (hpgl_PD):   "    "     "     "      "
		     (hpgl_PE): removed comments about assuming the parser
	             was not reentrant and reimplemented plotting commands
	             for polyline encoded vectors.

Mon Dec 30 14:27:16 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgvector.c (hpgl_AA): strange intermittent bug with gdb and
 	longjmp.  It seems that if a breakpoint is set on a function that
 	calls the parser and the parser needs more data it appears to
 	longjmp back to the breakpoint in the debugger.  Disabling the
 	breakpoint fixes the problem.
	             (hpgl_arc): missing parsing for chord angle.  Not
 	sure if I introduced this or if it was always that way.

Fileset of 12/31/96
===================

PCL
---

(LPD) Changes the API of the char_width procedure in a pl_font_t to take a
pl_symbol_map_t instead of a pl_symbol_map_collection_t, and also to take a
const gs_matrix *.  Removes the pl_symbol_map_collection_t type, since it
isn't needed anywhere right now.  (plfont.h, plsymbol.h)

HP-GL/2
-------

Mon Dec 30 01:04:19 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgvector.c (pe_args): added to pen selection /**** SELECT PEN ****/.
	(hpgl_PE): added drawing command.

	* pggeom.h (hpgl_3_colinear_points): fixed typo bug in
	hpgl_3_colinear_points().

	* pggeom.c (hpgl_compute_arc_coords): fixed bug in
	hpgl_compute_arc_coords, using sin() instead of cos().

Sun Dec 29 21:43:23 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgpoly.c (hpgl_wedge): implemented.
	(hpgl_EW): implemented.
	(hpgl_WG): implemented.

	* pggeom.c (general): HAS -- not enough error checking in pggeom.c.

	* pggeom.h: new routine hpgl_compute_vector_endpoints added to
	interface.  Calculates the endpoints of a vector given start
	point, an angle (degrees) and magnitude. (implementaion in pggeom.c)

	* pgpoly.c (hpgl_rectangle): corrected problem in building polygons
	because the macros only support the passing of two arguments as
	to hpgl_PD() function.  I have changed the calling sequences and
	not investigated the problem.  hpgl_rectangle appears to be
	implemented correctly now.
	(hpgl_wedge): implemented.

	* pgvector.c (hpgl_plot): replaced unimplemented return with 0
 	return.

Fri Dec 27 01:08:39 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgstate.h (hpgl_save_pen_position): added 2 new state variables
	to save the last position and up/down status, and new macros to
	access the variables

	* pgpoly.c (hpgl_rectangle): implemented.

Tue Dec 24 16:00:10 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_draw_current_path): updated
 	hpgl_draw_current_path to accept a second parameter, the rendering
 	mode.  Updated interface pgdraw.h and all callers to
 	hpgl_draw_current_path().

	* pgstate.h: renamed enumerated types to hpgl_rm_<type>
	(pcl_hpgl_state_s): removed hpgl_rendering_mode_t from the state
	as we will not need to maintain this variable.  It can be passed
	to the drawing routines passed by value.

	* pgpoly.c (hpgl_PM): changed to use boolean polygon mode.

	* pgparse.c (hpgl_process): changed to boolean polygon_mode.

	* *.c: removed hpgl_polygon_ignore().  The parser now deals with this.

Fileset of 12/24/96
===================

PCL
---

(LPD) Adds a pl_font_includes_char procedure for determining whether a given
character is defined in a given font and symbol set, and a
pl_font_char_width procedure for getting the character escapement of a given
character in a given font and symbol set.  MOST OF THE FUNCTIONALITY IS NOT
IMPLEMENTED YET, AND THE API IS SUBJECT TO CHANGE.  (plfont.h, plsymbol.h,
plchar.c)

HP-GL/2
-------

(LPD) Moves responsibility for ignoring non-polygon commands in polygon mode
into the parser:

	- Adds a 'polygon' flag to the command definition structure;
	removes the obsolete even_in_macro flag.  (pgmand.h)

	- Adds a HPGL_POLY_COMMAND macro, like HPGL_COMMAND except it defines
	a command that *is* allowed in polygon mode; removes the obsolete
	HPGL_SPECIAL_COMMAND macro.  (pgmand.h)

	- Changes the definition of all commands legal in polygon mode,
	and all commands with special argument parsing that must handle
	skipping in polygon mode themselves (CO, DT, LB, SM), from
	HPGL_COMMAND to HPGL_POLY_COMMAND.  (pgchar.c, pgconfig.c,
	pglfill.c, pgpoly.c, pgvector.c)

	- Changes the parser so that commands without the polygon flag are
	ignored in polygon mode.  (pgparse.c)

(LPD) Fixes a typo (mneumonics => mnemonics).  (pgmand.h)

(HAS):

Mon Dec 23 00:04:54 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_draw_current_path): added call to gs_fill for
 	polygon mode.

	* allfiles.c: added ignore macro to commands that are ignored in
	polygon mode, using the PCLTRM table on 21-41 "Polygon mode
	allowable commands".  Arguably this could be handled in the parser
	but it is more convenient to have the definition available when
	looking at the function that implements the mneumonic.
	
	* pgmand.h (hpgl_poly_ignore): macro to implement succesful return
	for commands that should be ignored in polygon mode.

Sun Dec 22 21:29:23 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgconfig.c (hpgl_DF): fixed bug due to HP documentation --
	uncovered by polygon implementation.  The DF command does the
	equivalent of PM0;PM2 clear the polygon buffer and exits polygon
	mode, not just PM as PCLTRM DF documentation states.

	* pgpoly.c (hpgl_PM): implemented.

	* pgdraw.c (hpgl_clear_current_path): implemented.
	(hpgl_close_current_path): implemented.

	* pgdraw.h: added hpgl_clear_current_path() and
	hpgl_close_current_path to the drawing interface.  These destroy
	and close paths respectively.  Used by PM.

	* pgdraw.c (hpgl_set_graphics_line_attribute_state): added warning
	message and fallback to vector if mode was not set to a know value.

Sat Dec 21 19:50:43 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_set_graphics_line_attribute_state): changes to
	set line attributes depending on what is being rendered -
	characters, lines, or polygons.
	

	* pgstate.h: added rendering mode of vector, polygon or
	character.  This affect line attributes see
	hpgl_set_graphics_line_attribute_state in pgdraw.c.

	* pgdraw.c (hpgl_set_clipping_region): set up clipping rectangle
	with gx_set_clip_to_rectangle();

Wed Dec 18 14:55:16 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgmand.h: removed hpgl_ok, we will use "return 0" for successful
	function termination.

	* pgvector.c (hpgl_CI): implemented circle.  (has bugs).

Sat Dec 14 13:45:27 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pginit.c (hpgl_do_reset): change to initialize picture frame and
	plot size before IN call.

Fileset of 12/13/96
===================

Procedures
----------

(LPD) Removes -O (optimization) from the default configuration in the PCL
makefile, because it creates too many problems for debugging.  (ugccpcl.mak)

PCL5
----

(LPD) Notes (here) the existence of the following barely-documented and
rarely-implemented PCL5e commands which we aren't planning to implement:
	ESC & k <0-7> W - Print Mode Selection (Color LJ5 Dev Guide p. 1-15)
	ESC & a <0-1> N - Negative Motion (ditto)
	ESC * r <0-2> Q - Raster Quality (ditto)
	ESC & o # Q - Mechanical Print Quality (Color LJ5 Dev Guide p. 1-18)
	ESC ( s # Q - Primary Font Quality (ditto)
	ESC ) s # Q - Secondary Font Quality (ditto)
	ESC & v # S - Text Color (ditto)
There is also one new command that we *should* implement:
	ESC & n <#bytes> W <data> - AlphaNumeric ID (LJ5 Dev Guide p. 23)

(LPD) Removes next_might_be_BS from the arguments of pcl_text, since it
doesn't provide any benefit.  (pcommand.h, pcfont.c, pcparse.c)

(LPD) Fixes bugs:
	- Using the current Ghostscript library caused a crash at startup,
because no halftone screen was set.  (pcmain.c)
	- Masked images didn't display, because they didn't initialize the
color correctly.  (rtraster.c)
	- An undeclared extern had crept in.  (pcsfont.c)

(RCD) Summary of changes:
	pcfont.c
		BS handling, elaboration of font scaling in pcl_text
	pcursor.c
		BS handling
	pcstate.h
		BS handling
	pcstatus.c
		minor tweak, avoid looking for FontName's that aren't there
	pcsfont.c
		hack to load some fonts
	pcpage.c
		tweak default right margin to nonzero so space works

HP-GL/2
-------

(HAS):

Thu Dec 12 14:07:04 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgconfig.c (hpgl_IP): fixed typo in IP.  Tracking the P2 y
 	coordinate was incorrect as it was using the X value instead of
 	the y value.
	(hpgl_picture_frame_coords): routine to derive the default picture
 	frame.
	(hpgl_IP): updated to use the new picture frame routine with
 	rounding ??? (see code).
	(hpgl_IW): Implemented the IW command, it is also used the new
 	picture frame routine.

	* pgdraw.c: set up picture frame and plot size scaling.

	* pgframe.c (pcl_hpgl_plot_horiz_size): modified plot size to
	to convert arguments to centipoints so that it is in the same
	units as the picture frame.  All the pcl commands in pgframe.c use
	centipoints internally now.

	* pgconfig.c (hpgl_IP): fixed location of P1 to be a function of
	the the pcl anchor points.

Wed Dec 11 00:28:56 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pcl5.mak (pginit_h): more missing dependencies.

	* pggeom.h (mm_2_plu): corrected typo in millimeter 2 plotter unit
	conversion (ARGH!).

	* pglfill.c (hpgl_PW): Changes to maintain pen width in plu's
	irrespective of current WU setting.  Also changed hpgl_WU to call
	hpgl_PW for setting default widths.

	* pgmand.h: Added gdebug.h and stdio.h (for gdebug) as they are
	used by the macro hpgl_call().

	Note there is a gcc specific variable to print out the name of the
	invoking function.  This needs to be #ifdef'd out or removed in
	the future.

	* pcl5.mak: fixed pgvector.c's dependency list, it was missing a
 	number of include files.  NOTE: gcc -M generates the dependencies
 	automatically.

Tue Dec 10 23:17:37 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgmand.h: added macro hpgl_call() that calls a function and
 	returns an error code if the code returned is less than 0.  Most
 	of the hpgl and gs functions return if the calling function is
 	less than 0 so this avoids cluttering up the code with the if
 	statement and debug code.

	Also added a status code - hpgl_ok.  

	* pgdraw.c and pgdraw.h: Extensive modifications for returning
	error codes.  
	
Mon Dec  2 13:36:04 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_set_graphics_dash_state): Needed to comment out
	gs_setdashadapt() and gs_setdotlength() as I don't have them.
	Would prefer an enumerated type for in lieue of the boolean
	parameter.

Mon Dec  2 00:05:38 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_draw_current_path): removed attempted restore of
	pcl's ctm, as it was not correct and later discovered to be
	unnecessary.  

	* pgdraw.c (hpgl_add_point_to_path): used pcl_set_ctm() to
	initialize the pcl transformation that will be used to derive
	hpgl's transformation.

	* pginit.c (hpgl_do_reset): fixed duplicated block of code.

Sun Dec  1 14:25:29 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pggeom.c (hpgl_normalize_chord_angle): added floor() to truncate
	the angle.

	* pgdraw.c (hpgl_set_graphics_line_attribute_state): added large
	miter limit to do non beveled joins.  

	* pgdraw.c (hpgl_set_graphics_dash_state): uncommented dash API
	calls that are now supported in gs 4.34.

Wed Nov 27 17:21:50 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgconfig.c: removed second #include of gscoord.h.

	* pglfill.c (hpgl_PW): fixed logical error with pmax and pmin.
  	The previous code set pmax = pmin even if no pen was specified.
  	Now pmax is set to pmin if there is a pen number argument and the
 	argument is in the range 0 - pmax.

	* pcommand.h (value_set_float): changed name of macro parameter
	from fl to fr.  This macro is used in pginit.c to set up the
	picture frame commands.

	* pgmand.h: added comments to tell which file each HPGL/2 commands
	live in.

	* pgstate.h (pcl_hpgl_state_s): changed pen cap to ints.  A table
	in pgdraw.c is used to map the ints to appropriate gs graphics
	types.  Did this change a while back and did not document it.

	* pgdraw.h: changed *state to *pgls in prototypes.

	* pgdraw.h: missing prototype variable name y2 in hpgl_draw_line()
	declaration.

	* pgdraw.c: removed _a_ from from function names.

	* pgdraw.h: removed _a_ from from function names.

	* pgvector.h: removed _a_ from from function names.

	* pgdraw.c: Added gscoord.h for declarations of gs_initmatrix()
	and gs_scale().

	* pgdraw.c: Changed pu -> plu.

	* pggeom.h: Added #include math_h.h for sqrt.

	* pggeom.h: Changed pu -> plu.

	* pglfill.c: Added #include pgdraw.h for hpgl_draw_current_path()

	* pg*.[ch]: Removed blank lines at the end of files.  Bad habit of
	using CTRL-N in emacs at the bottom of files.

Fileset of 11/27/96
===================

PCL5
----

(LPD) Replaces pcl_plain_char with pcl_text, which takes a string rather
than a single character.  (pcommand.h, pcfont.c)

(LPD) Makes the parser look ahead to gather up runs of plain characters.
(pcparse.c)

(LPD) Fills in the pl_font_params_t properly for downloaded fonts.
(pcfont.h, pcsfont.c)

Fileset of 11/26/96
===================

PCL5
----

(RCD) Adds code for font selection.  (pcfont.c)

HP-GL/2
-------

(HAS) Makes all command procedures public so they can be called from other
commands.  (pgmand.h, pg*.c)

(HAS):

	* pginit.c (hpgl_do_reset): initialization of current hpgl/2 path
 	to empty.

	* pgdraw.h: corrected incorrect filename from copying template,
 	added #ifndef for multiple inclusion of .h, changed float ->
 	floatp for all arguments, made function names more readable, and
 	added comments for each prototype.

	* pggeom.h: same changes from pgdraw.h.  Added parenthesis to
 	macros so that expressions will evaluate correctly.

	* pgstate.h (pcl_hpgl_state_s): Moved statics that maintain the
 	current hpgl/2 path state to the hpgl state struct.

	* pgdraw.c (hpgl_add_point_to_path): Change to reflect previous
 	pgstate.h change.

	* pgdraw.c (hpgl_draw_current_path): Change to reflect previous
 	pgstate.h change.

	* pgdraw.c (hpgl_add_point_to_path): Added parameters to gs_func()
 	to make it a proper declaration.

	* pgdraw.c (hpgl_add_arc_to_path): removed function call to adjust
 	the chord angle.  Moved initializion of num_chords.

	* pggeom.c (hpgl_compute_arc_direction): changed algorithm to not
 	use trancendentals.  Also, only need the first and last point of
 	the arc for arguments.

	* pggeom.h: synced pggeom.h with pggeom.c change.

	* pgvector.c: style and indentation changes.

	* pginit.c (hpgl_do_reset): defaulted picture frame and plot size
 	to the pcl logical page size.

	* pgconfig.c (hpgl_DF): implemented.

	* pgconfig.c (hpgl_IN): implemented.

	* pginit.c (hpgl_do_reset): rewritten using mneumonics.  Still
	missing replot size.

	* pginit.h: removed hpgl_do_DF -- now there is just hpgl_DF().


	* pgmand.h: added hpgl mneumonics.  As many of the mneumonics are
	macros for collections of mneumonics it is useful to implement
	the macros in terms of the commands themselves.  This obviates the
	difficulty of having elements of the state data structure updated
	in different portions of the code. 


	* pglfill.c (hpgl_AC): done.


	* pglfill.c (hpgl_FT): Filled in default spacing and angle, though
	it is currently incomplete, see comments in the code.


	* pgdraw.c (hpgl_set_graphics_state): 
	Initialize have_path correctly. (OK - should work)
	Initialize pen number (SP) correctly. (OK)
	Initialize number pens (NP) correctly. (OK needs work)


	* pgdraw.c (hpgl_add_point_to_path): New code to initialize the
	current transformation matrix each time a gl/2 path is started.

	* pgdraw.c (hpgl_draw_current_path): initialize the graphics state
	each time we stroke or fill.


	* pgmand.h (hpgl_args_add_real):
	TODO: fix promotion to doubles.  ?? make scanner use doubles.


	* pglfill.c (hpgl_UL): UL with no parms executes LT;  Also code to
	update the both fixed and adaptive line patterns.

	* pgstate.h (pcl_hpgl_state_s): added boolean solid_line_type to
	the state.  False if a dashed line has been specified.

	* pgstate.h (pcl_hpgl_state_s): split line patterns into 2 data
 	structures one for adaptive and one for fixed.

	* pgdraw.c: gs graphics state updates for line types and line
 	attributes.

	* pgstate.h (pcl_hpgl_state_s): changed line joins and caps to
	type int instead of gs enumerated types.  The mapping to the gs
	types happens later.


	* pglfill.c (hpgl_LA): Added defaults for the no argument case.

----------------------------------------------------------------
