   Copyright (C) 1996, 1997 Aladdin Enterprises.  All rights reserved.
   Unauthorized use, copying, and/or distribution prohibited.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

This file, NEWS-PCL, describes the changes in the most recent releases of
Aladdin's PCL5 code, in reverse chronological order.

Version 0.26 (6/3/97)
=====================

More bug fixes, and the first implementation of vector fills.

FTS problems:
    0060:
	.1 Rev portrait & rev landscape text clipped in landscape orientations
	.2 GL/2 filled wedges missing (all 4)
	.3 GL/2 stuff is displaced in landscape orientations
    1060:
	.2 Dashed line offset is not correct so most of the graphics that use
	  dashing dash out of phase.
	.3 In order to recover the missing diagonal lines in several panels
	  the PCL Reset command will have to be redefined to stroke the
	  current gl2 path.  This is because the test file issues the PCL
	  reset in GL/2 stream without using the exit to PCL command.
CET problems:
	- The width of Intellifont characters is wrong.  (CET 14_01)
	- Positioning of characters is off -- requires "real" fonts.
	- Text wrap happens too far to the right.
	- Tabs don't work quite right.
	- Text length doesn't work.  (CET 16_04)
	- CET files with major anomalies: 16_10, 16_11
Unimplemented features (PCL):
	- Font Control 6 (copy font & assign ID) (CET 14_04)
	- Continuation blocks for downloaded characters.
	- User-defined line type (99).

(LPD) Fixes bugs:
	- gxpath.h was included twice, causing compilation errors.  (This
file should really be protected against double inclusion.)  (pcdraw.c,
pgdraw.c)

(HAS)
	* rtmisc.c (rtl_enter_pcl_mode): releases the polygon buffer.

	* pgvector.c (hpgl_draw_arc): routine to draw the path if we are
	not in polygon mode.  
	(hpgl_AR): added draw arc routine
	(hpgl_AT): ""
	(hpgl_AA): ""
	(hpgl_CI): new implementation.

	* pgstate.h: new data structures and pulled in gzpath.h
	interfaces.  Also new definitions for vector fills and saved line
	types.

	* pgpoly.c (hpgl_wedge): Fixed incorrect calculation of vector
	endpoints.
	(hpgl_EA): changed to use polygon buffer.
	(hpgl_EP): ""
	(hpgl_ER): ""
	(hpgl_EW): ""
	(hpgl_FP): ""
	(hpgl_RA): ""
	(hpgl_RR): ""
	(hpgl_WG): ""
	(hpgl_get_poly_render_mode): routine to get distinguish between
	rendering with hpgl/2 line fills vs. pcl fills.

	* pglfill.c (hpgl_AC): added defaults for AC.
	(hpgl_FT): local used before all error checking.
	(hpgl_LT): saving and restoring of line type implemented.  Removed
	recursion.

	* pglabel.c (hpgl_print_char): removed setting of cap and join.

	* pginit.c (hpgl_do_reset): initialization code for polygon
	buffer. 

	* pggeom.h: added epsilon for all routines comparing floating
	point values.

	* pgdraw.h: removed hpgl_set_graphics_state() from interface.
  	comments and new parameter for hpgl_add_arc_to_path()
 	prototypes for hpgl_gsave, hpgl_grestore,
 	hpgl_copy_polygon_buffer_to_current_path,
 	hpgl_copy_current_path_to_polygon_buffer  (details below)
	removed hpgl_draw_and_preserve_path().

	* pgdraw.c (hpgl_set_graphics_dash_state): hpgl/2 dot dash support
	(LT0) implemented properly.
	(hpgl_polyfill_bbox): new routine to create a bounding box used
 	for hpgl vector style fills.
	(hpgl_set_clipping_region): modified to not clip if vector
 	filling, gs_clip() is used instead.
	(hpgl_set_plu_to_device_ctm): removed unnecessary inner block.
	(hpgl_set_user_units_to_plu_ctm): modified to attempt scaling if
 	scaling is on, this is not complete.
	(hpgl_set_ctm): changed from private to public.  Needed by
 	routines that must maintain the current device space position (SC,
 	RO, etc.)
	(hpgl_polyfill): new routine for polygon vector filling algorithm.
  	See comments in code for problems being worked on.
	(hpgl_polyfill_using_current_line_type): new routine to setup
 	vector filling code -- gsave and clipping.
	(hpgl_map_fill_type): modified not to fall back to solid when the
 	fill type is vector.
	(hpgl_set_drawing_color): added call to fill polygon with current
 	line type if appropriate.
	(hpgl_set_graphics_state): changed back to a private routine.
	(hpgl_start_path): removed obsolete comments.
	(hpgl_add_arc_to_path): boolean parameter for an implicit moveto
	to the first position irrepective of pen up/down state.  CI uses
	this.
	(hpgl_draw_current_path): Changed comment.
	(hpgl_draw_current_path): support for new line fill render mode.
	(hpgl_copy_current_path_to_polygon_buffer): new routine to save
	the current path to gl/2's polygon buffer.
	(hpgl_copy_polygon_buffer_to_current_path): the opposite.
	(hpgl_gsave): just gs_gsave plus maintenance of gl/2's first
	moveto state
	(hpgl_grestore): same

	* pgconfig.c (hpgl_DF): removed call to hpgl_SC and simply set
	scaling to scaling_none.  This is a workaround to the more elaborate
	problem that the gl/2 graphics state is not adequately initialized
	when the first SC is used implicitly.  
	(hpgl_RO): simplification of RO and now maintains current point by
	tranforming current device position.
	(hpgl_SC): Like RO now maintains current device point and changes
	to use a local structure instead of using the state structure
	prior to all error checking.


Version 0.25 (5/12/97)
======================

More bug fixes.  This fileset produces halfway reasonable output from many
of the Genoa FTS files.

This version requires pl library version 1.14 or later.

(LPD) Fixes bugs:
	- The 3-point arc algorithms often drew incorrect portions of the
arc.  (pgvector.c)
	- The rounding algorithm for chord angles could result in drawing
too long an arc.  (pgdraw.c)
	- Some PCL commands didn't include name strings for debugging.
(pgframe.c)
	- The Genoa FTS (0010) apparently requires the built-in scalable
fonts to treat the space character as a control code rather than a printable
character, so that it is affected by explicit setting of HMI.  (pcfont.c)
	- Tab positions were computed relative to the edge of the logical
page rather than relative to the left margin.  (pcursor.c)
	- The HMI wasn't always recomputed when a new font was selected.
(pcfont.c)
	- Text wasn't clipped at the margins.  (pcfont.c)
	- Because of a typo, selecting end-of-line wrapping could cause an
error.  (pcfont.c)
	- Rounding caused lines to wrap one character too early.  (pcfont.c)
	- The margins weren't reset properly when changing print direction.
(pcdraw.c)
	- Raster graphics with presentation mode 3 in landscape orientation
were drawn in the opposite direction from the correct one.  (rtraster.c)
	- Fill patterns were rendered at the current resolution rather than
the correct one (normally 300 dpi).  (pcdraw.c)
	- Fill patterns weren't rotated to match the orientation and print
direction.  (pcstate.h, pcdraw.c)
	- The vertical cross-hatch pattern was incorrect.  (pcdraw.c)
	- The HMI sometimes wasn't computed from the font when needed.
(pcpage.c)
	- The right margin was set to the left edge of the specified column
rather than the right edge.  (pcpage.c)
	- The text length should be stored as a floating point value to
preserve accurate margin values when changing print directions.  (pcstate.h)
	- We didn't track both rotated and unrotated logical page
dimensions.  (pcstate.h, pcdraw.c, pcpage.c)
	- There was confusion about whether the pitch_100ths value in font
headers was the pitch in 100ths of a design unit (nominally, 1 point) or the
pitch in 100ths of characters per inch, because downloaded PCL font headers
use the former concept but pitch setting commands use the latter.  We now
provide both.  (pcdraw.c, pcfont.c, pcfsel.c, pcsfont.c, pcstatus.c,
pgchar.c, pgdraw.c, pginit.c, pglabel.c)

(HAS) Change Log:  (note: there might be a few omissions this time)

	* pgvector.c (hpgl_CI): corrected stray lines from center of
	circles.  

	* pggeom.c (hpgl_compute_arc_center): did not use absolute value
	to check for degenerate case.

	* *.[ch]: general cleanup of function not using hpgl_call() and
	removal of obsolete calls.

	* pgdraw.c (hpgl_start_path): moved recording of first point to
	hpgl_start_path().

	* pgpoly.c (hpgl_PM): missing "break" in case statement.  No
	associated bug.

	* pgdraw.c (hpgl_set_user_units_to_plu_ctm): apply P1 and P2
	translation only when scaling is on.  Recovers first panels in fts
	1060 tests.

	* pgvector.c (hpgl_CI): corrected circle implementation.

	* pgdraw.c (hpgl_draw_current_path): even odd and nonzero winding
 	changes. (new functionality)

	* pgstate.h: state changes to support even-odd and non-zero
	winding fills. (new functionality)

	* pgdraw.c (hpgl_add_arc_to_path): implemented peter's fix for
	getting the correct number of chords for arcs.

	* pgvector.c (hpgl_arc_3_point): integrated peter's fix for 3
	point arc.
	
	* pgvector.c (hpgl_arc_3_point): changed arc three point to use
	hpgl_arc() routine.

	* pglabel.c (hpgl_process_buffer): fixed formfeed and horizontal
	tabs processing.

	* pgdraw.c (hpgl_map_fill_type): partial support for character mode
	filling.  Set drawing color correctly so the fts headers are now
	visible. 

	* pglabel.c (hpgl_LB): bug fix LB not processing carriage return
	introduced with pcl023.

	* pgdraw.c (hpgl_set_graphics_state): made private and removed
	from interface in pgdraw.h.

	* pglabel.c (hpgl_print_char): removed call to
	hpgl_set_graphics_state. 

	* pgstate.h: documented hpgl/2 coordinate system.

Version 0.24 (5/7/97)
=====================

More bug fixes.  This is an intermediate fileset to synchronize LPD's and
HAS's changes.

(LPD) Fixes bugs:
	- The makefile rule for pcl5.dev had a typo (PCLOJB for PCLOBJ).
(pcl.mak)

(LPD) Makes stick font characters always use round caps and joins, for
visual consistency.  (pgdraw.h, pgdraw.c, pglabel.c)

(HAS) Numerous fixes to graphics -- changes will be included in the log for
the next fileset.  (pggeom.h, pgstate.h, pggeom.c, pgdraw.c, pglfill.c,
pgvector.c)

Version 0.23 (4/16/97)
======================

More bug fixes.  Labels now appear in the correct place.

(LPD) Splits off functionality from two existing files:
	- pcfont.c => pcfsel.h, pcfsel.c (font selection machinery used by
	both PCL and HP-GL/2)
	- pgchar.c => pglabel.c (CP and LB commands)

(LPD) Finishes parsing the font selection and character transformation
commands for HP-GL/2: CF, FI, FN, SI, SR.  Looks up fonts when necessary.
Does *not* extend actual text writing to handle any font other than the
stick font, or to handle transformations (slant, direction, size).
(pcl.mak, pcfont.h, pcfsel.h, pcfont.c, pcfsel.c, pgstate.h, pgchar.c,
pglabel.c)

(LPD) Moves error printing into a procedure to reduce code size.  (pgmisc.h,
pgmisc.c)

(LPD) Redesigns the macros for setting up arguments for calling HP-GL/2
commands to generate less code.  (pgmand.h, pgconfig.c, pglabel.c, pgpoly.c,
pgvector.c)

(LPD) Fixes HP-GL/2 bugs:
	- SA and SS recomputed the current font unnecessarily.  (pgchar.c)
	- DT considered character code 5, rather than 10 (LF), an invalid
terminator.  (This is a typo in the H-P documentation.)  (pgchar.c)
	- CP had a typo for label origin 17.  (pglabel.c)
	- The computation of the character cell width was incorrect.
(pglabel.c)
	- SB didn't decache affected fonts.  (pgchar.c)
	- Transparent data mode wasn't implemented.  (pglabel.c)
	- (Stick font) characters were not scaled properly according to the
current font size.  (pggeom.h, pglabel.c)
	- The character cell size wasn't computed properly depending on
whether the font was fixed- or proportional-spaced.  (It's still wrong, but
it's closer to being right.)  (pglabel.c)
	- The graphics state (in particular, the drawing color) wasn't being
set up properly for characters.  (pgdraw.h, pgdraw.c, pglabel.c)

(HAS) Fixes bugs:
	- A relative move as the first element of a path produced incorrect
positioning.  (pgdraw.c)
	- A typo in computing the origin offset caused labels to be
misplaced.  (pglabel.c)

Version 0.22 (4/13/97)
======================

This is another bug fix fileset.  With these fixes, we produce nearly
correct output from the first CET file (14_01), allowing for the fact that
we don't have the right set of fonts; we get semi-reasonable output from CET
14* through 16*, except as noted below; and we can run the entire non-GL/2
CET subset (14* through 23*) without crashing, except for 31_01.

(LPD) Fixes bugs:
	- When printing to a real printer, the left edge of the page was
clipped inappropriately.  (pcdraw.c, pcmain.c)
	- The fonts loaded from Windows didn't include Symbol or WingDings.
(pcfont.c)
	- The font matching algorithm didn't recognize the same typeface
from a different vendor as a partial match.  (pcfont.c)
	- Only the last font loaded from Windows was actually entered in the
built-in font dictionary.  (pcfont.c)
	- The CTM was set wrong for landscape orientation.  (pcdraw.c)
	- Modifying the HMI didn't properly affect fixed-space fonts.
(pcfont.c)
	- If a font was selected by ID, setting the height or pitch
invalidated the font, rather than just scaling it.  (pcstate.h, pcfont.c)
	- Vertical cursor positioning by rows didn't add the 0.75 * VMI
fudge factor.  (pcursor.c)
	- The character complement for the preloaded fonts wasn't set.
(pcfont.c)
	- The check for symbol set support in unbound fonts was incorrect.
(pcfont.c)
	- check_support didn't complement the glyph vocabulary number in
fonts, leading to invalid array accesses.  (pcfont.c)
	- The graphics state client data pointer didn't point back to the
pcl_state_t.  (pcmain.c)
	- The raster graphics left margin was never set, and the default
width was not computed correctly.  (rtraster.c)
	- For text, the Pattern ID command took effect immediately, instead
of at the next Select Pattern command.  (pcfont.c)
	- Out-of-range cross-hatch pattern IDs could cause memory access
errors.  (pcdraw.c)
	- Selecting a font by ID didn't set the symbol set correctly.
(pcfont.c)
	- Symbol mapping wasn't disabled when selecting a bound font.
(pcfont.c)
	- The symbol map wasn't set properly if the selected font was the
very first font in the dictionary.  (pcfont.c)
	- User-defined patterns caused illegal memory accesses.  (pcstate.h,
pcdraw.c)
	- If the GL/2 parser was both in polygon mode and LOST, commands
that were to be skipped in either case caused a memory fault.  (pgparse.c)
	- If a grouped escape sequence was terminated prematurely by a
control character, that character was discarded.  (pcparse.c)
	- The CAP bookkeeping for changes in print direction was incomplete.
(pcdraw.h, pcstate.h, pcdraw.c, pcpage.c, pgframe.c, rtraster.c)
	- The CTM was set wrong for rotated print directions.  (pcdraw.c)
	- The CTM was set wrong for 180 and 270 degree rotations.
(pcdraw.c)
	- Rectangles didn't follow the print direction.  (pcrect.c)
	- Setting the orientation didn't eject the current page.  (pcpage.c)
	- Setting the orientation to the same value wasn't a no-op.  (The
PCL5 TRM doesn't say this is supposed to be the case, but it is.)
(pcpage.c)
	- The default right margin wasn't set correctly.  (pcpage.c)

(LPD) Implements missing functions:
	- End-of-line wrap for text.  (pcfont.c)
	- Deleting individual characters from a soft font (ESC * c 3 F).
(pcsfont.c)
	- Symbol mapping for unbound fonts.  (pcfont.c)
	- Intellifont downloading and (unhinted) rasterizing.  (pcifont.c,
pcsfont.c)
	- Diagonal-line cross-hatch patterns were reflected, because of the
reflected coordinate system.  (pcdraw.c)
	- The drawing color wasn't set for raster graphics.  (rtraster.c)
	- The cursor stack didn't interact properly with changes in print
direction.  (pcursor.c)
	- Margins weren't permuted properly when changing print direction.
(pcdraw.c)
	- The default raster width was computed from the right margin
instead of the right edge of the logical page.  (rtraster.c)

(LPD) Adds text tracing to the PCL tracing output.  (pcparse.c)

(LPD) Initializes the default symbol set to PC-8 rather than Roman-8, for
compatibility with the LJ 6MP being used for testing.  Eventually this will
have to be addressed in a more systematic way.  (pcfont.c)

(HAS) ChangeLog:

	* pgstate.h: new data structures to support hpgl label buffering.

	* pgfont.c: program that generates the font data modified to not
	multiply the font height by 1.5.  The calcomp font code did this
	for an unknown reason.

	* pgdraw.c (hpgl_set_label_to_plu_ctm): modified to use the
	current selected font.

	* pgchar.c (hpgl_get_current_cell_width): updated to use current font
	selection.
	(hpgl_get_current_cell_height): updated to use current font
	selection, and the character cell was incorrectly calculated to be
	2x the current point size -- changed to 1.33 point size for stick
	fonts. 
	(hpgl_CP): added comments and a note about incorrect calculation of
	extra space command.
	(hpgl_update_label_length): new funtion to update the length of
	the current label string as characters are buffered.
	(hpgl_init_label_buffer): new function to allocate a label buffer
	and set up the label state.
	(hpgl_resize_label_buffer): new function to resize the label
	buffer if we run out of space.
	(hpgl_destroy_label_buffer): new function to deallocate the
	current label buffer and reset the label state.
	(hpgl_buffer_char): new function to place a character into the
	character buffer.
	(hpgl_get_character_origin_offset): new function to calculate the
	label origin as defined by LO.
	(hpgl_process_buffer): new function to process the current label
	buffer of characters.
	(hpgl_LB): modified to use the new label buffering scheme.

Version 0.21 (4/1/97)
=====================

This fileset, like many to come, mostly fixes bugs.

(LPD) Fixes bugs:
	- White rectangles weren't drawn properly (they could be drawn with
random data or not at all).  (pcstate.h, pcrect.c)
	- Re-entering PCL from HP-GL/2 didn't copy back the cursor position
if requested.  (rtmisc.c)
	- Shading and pattern filling weren't implemented in PCL mode!
(pcstate.h, pcdraw.c)
	- The initial cursor position didn't reflect the initial top margin.
(pcl.mak, pcursor.c)
	- Setting the PCL CTM didn't take the left offset of the logical
page into account.  (We aren't sure what we did is correct.)  (pcdraw.c)
	- The definition of paper sizes used long and int rather than coord.
(pcstate.h)
	- The HP-GL/2 FN command incorrectly set the primary rather than the
secondary font.  (pgchar.c)
	- Some private procedures were declared 'static' rather than
'private'.  (pgchar.c)
	- Bitmap fonts were rendered upside-down.  (pcfont.c)
	- If the current font didn't define the 'space' character, spaces
were ignored, rather than moving by the HMI.  (pcfont.c, pcursor.c)
	- Scalable fonts weren't scaled correctly.  (pcfont.c)
	- Text didn't properly select the current color and pattern.
(pcfont.c)
	- Switching fonts didn't reset the HMI.  (pcdraw.h, pcstate.h,
pcursor.c, pcdraw.c, pcfont.c, pcpage.c)
	- The pitch value of bitmap fonts was computed incorrectly.
(pcsfont.c)

(LPD) Adds command names to PCL command tracing output.  (pcommand.h, pc*.c,
rt*.c)

(HAS) ChangeLog:

* pgstate.h,pginit.c,pgframe.c,pginit.c,pgframe.c,*.[ch].
coordinate changes for pcl picture frame and plot size.

* pgchar.c: changed static function declarations to private.

Version 0.20 (3/26/97)
======================

This is the first numbered fileset.

(HAS) Change log:

	* pgdraw.c: deleted obsolete function to concatenate a character ctm.
	(hpgl_set_ctm): further simplification of ctm stuff.

	* rtmisc.c (rtl_enter_hpgl_mode): new functionality to let hpgl/2
	inherit pcl's current cap.

	* pgdraw.c (hpgl_add_pcl_point_to_path): new function to add a pcl
	point to an hpgl/2 path.

	* pgdraw.h: external declaration for hpgl_add_pcl_point_to_path()
	
	* pgframe.c (pcl_vert_pic_frame_size_decipoints): default picture
	frame height no longer pcl text length * vmi.  The previous setup
	divided by 48 due to a pcl problem that should be fixed in tandem
	with this fix.

	* pgmisc.h (hpgl_lost): new definition to return a boolean result
	for lost mode state.

	* pgvector.c (hpgl_plot): bug fix to properly handle no args
	relative case.
	(hpgl_PA): change to set the relative flag first then return the
	value of the function call.  The code was originally this way and
	I do not recall the origin of the change.

	* pgstate.h (hpgl_save_pen_state): now takes a flag to indicate
	which action to take.  Was three separate macros.
	(hpgl_restore_pen_state): ditto.
	

	#defines for pen relative, pen down, pen pos and pen all, used by
	save and restore macros.

	removed obsolete last state values now pen state must be stored in
 	a local structure (hpgl_pen_state_t) provide by the caller of the
 	macro.

	* pgpoly.c All pen state macros updated.

	* pgchar.c (hpgl_get_carriage_return_pos): new
 	function to get the carriage return position.
	(hpgl_set_carriage_return_pos): new function to set the carriage
 	return position.

Fileset of xx/xx/97
===================

This fileset was not meant for actual use and was not archived, but this
wasn't communicated clearly, so it wound up being used anyway.

(LPD) Fixes bugs:
	- Semicolons were missing after several calls of hpgl_call.
(pgvector.c)
	- Many dependencies were missing from the makefile.  (pcl.mak,
pgframe.c)
	- The CTM wasn't set properly for raster images.  (rtraster.c)
	- A system file was included before std.h, causing conflicts for
type names.  (pgmand.h)
	- Many files didn't include stdio.h, which is required for NULL on
some systems.  (pccpalet.c, pcmacros.c, pcprint.c, pcsymbol.c)
	- The simple color palettes weren't defined.  (rtcolor.c)
	- The list of object files in a module definition was incorrect.
(pcl.mak)
	- The text length was computed incorrectly.  (pcpage.c)

(LPD) Renames and restructures the makefiles, in preparation for the move to
CVS.  (pcl5.mak => pcl.mak, ugccpcl.mak => pcl_ugcc.mak, watcpcl.mak =>
pcl_watc.mak)

(LPD) Refactors the hpgl_call macros to reduce source code size.  (pgmisc.h)

(LPD) Makes pcmain.c always compile with DEBUG, so we can always get at
least minimal statistics.  (pcmain.c)

(LPD) Makes the loading of the initial fonts search a list of directories,
rather than only looking in the current directory.  (pcfont.c, pcmain.c)

(HAS) Change log:

	* pgvector.c (hpgl_arc): modified to draw the current path upon
	entry. 

	* pgpoly.c: removed occurrences of hpgl_set_current_position()
 	commensurate with change to positioning change below: search for
 	NOTE:

	* pgmisc.c (hpgl_set_lost_mode): commented out code that can cause
	an infinite loop.  This will have to be approached differently.
	It is not part of functional completeness so I am putting it off
	for a bit.

	* pgdraw.h (hpgl_init_path): replaced state variable have_path
	with have_first_moveto().  have_path is not used in the code anymore.

	* pgdraw.c (hpgl_set_graphics_line_attribute_state):
 	gs_setlinejoin was receiving a parameter that specified the
 	current cap and gs_setlinecap was receiving the line
 	join. (fixed).
	(hpgl_set_ctm): broken down into 2 functions as follows:
	(hpgl_set_user_units_to_plu_ctm): documentation is included in the
 	function's name ;-)
	(hpgl_set_plu_to_device_ctm): documentation is included in the
 	function's name ;-)
	(hpgl_map_fill_type): bug fix to map unsupported values to solid
 	black.
	(hpgl_map_id_type): same.  

	NOTE:: the next 2 changes are related to a design change.
  	hpgl_get_current_position() and hpgl_set_current_position() will
 	be used to update the current position.  These values are updated
 	as values are added to the current path.  The previous setup only
 	updated hpgl's state when paths were cleared.

	(hpgl_get_current_position): new routine to get hpgl's current
 	point.
	(hpgl_set_current_position): updated to set hpgl's position and
 	not look at gs_currentpoint().
	(hpgl_add_point_to_path): modification to reflect design change.
  	Simplification.
	(hpgl_add_point_to_path): added gs_point structure to hold x and y
 	values.
	(hpgl_add_point_to_path): dumb bug fix: there should not be an
 	"else" in hpgl_add_point_to_path.  After adding the first moveto
 	instruction execute the desired operation.
	(hpgl_add_point_to_path): removed outdated comment.
	(hpgl_add_arc_to_path): number of chord calculation was mixing
 	radians and angles resulting in bogus value.
	(hpgl_add_bezier_to_path): updated function to explicitly set the
 	current position to the last bezier curve coordinate because this
 	is the only hpgl drawing primitive that does not use
 	hpgl_add_point_to_path() which sets the current position for other
 	routines.
	(hpgl_close_path): this logic was taken out of
	hpgl_draw_current_path() to reduce complexity.
	(hpgl_draw_current_path): reset the plu to device ctm
	effectively factoring out user scaling when drawing the current
	path to imitate hpgl/2 style setting of line width.

	* pgconfig.c (hpgl_DF): moved default scaling initialization to
	come before implicit moveto.
	(hpgl_DF): changed to use hpgl_args_set_real() instead of hpgl_args_setup()
	(hpgl_DF): removed commented out code that initialized SM and RF.
	(hpgl_SC): parser bugfix: The SC command should parse in
	the order xmin, xmax, ymin, ymax, it was xmin, ymin, xmax, ymax.
	(hpgl_SC): parser bugfix: Once we hit "case 4" the default scaling
	should be hpgl_scaling_anisotropic not uninitialized.

	* pgchar.c (hpgl_CP): removed set current position calls.
	(hpgl_print_char): removed set current position calls.

Fileset of 3/6/97
=================

(LPD) Fixes bugs:
	- Splits the definition of HPGL2_OTHER in the makefile into two, to
avoid exceeding the MS-DOS command line limit.  (pcl5.mak)
	- Removes a duplicate definition of hpgl_error.  (pginit.c)

(HAS) Changes and fixes:

	* pgvector.c (hpgl_plot_and_clear): new function to plot points
	and clear lost mode if necessary.  Changes to implement lost mode.

	* pg*.c:  mods to get rid of HPGL_COMMAND_POLY and use the new
	HPGL_COMMAND with a flag as the 3rd arg.

	* pgmand.h: removed HPGL_COMMAND_POLY macro.  Added flag 
 	argument to HPGL_COMMAND_MACRO which currently defines how the
	command should behave wrt polygon mode and lost mode.

	* pgmisc.h (hpgl_call_check_lost): implemented
	hpgl_check_lost_mode macro.

	* pgdraw.c (hpgl_clear_current_path): set first moveto state to
	false in clear current path.

	* pgvector.c (hpgl_PA): implemented clearing of lost mode.

	* pgstate.h (hpgl_restore_pen_state): pgstate.h missing
	pgstate_INCLUDED. 

	* pgmisc.c (hpgl_set_lost_mode): function to set and clear lost
	mode.  Interface in pgmisc.h.

	(hpgl_error): moved error handling to pgmisc.[ch]

	* pgstate.h: data structures for lost mode.

Fileset of 3/4/97
=================

(LPD) Fixes bugs:
	- PCL drawing didn't set the CTM and clipping region when it needed:
it assumed (incorrectly) that they would stay unchanged between commands.
(pcfont.c, pcjob.c, pcpage.c, pcrect.c, rtraster.c)
	- Page clipping in PCL mode wasn't implemented.  (pcdraw.h,
pcstate.h, pcdraw.c)

Fileset of 3/3/97
=================

(LPD) Fixes bugs:
	- The number-of-chords computation wasn't consistent for positive
and negative angles.  (pggeom.c)
	- The conversion factor from inches to plotter units was wrong.
(pggeom.h)
	- The HP-GL/2 translation for reverse landscape orientation was
incorrect.  (pgdraw.c)
	- The first point of HP-GL/2 beziers was defined incorrectly because
of a typo.  (pgdraw.c)
	- Entering polygon mode with PM[0] drew the current path instead of
clearing it.  (pgpoly.c)
	- The RA command didn't draw the rectangle or clear the path.
(pgpoly.c)

(LPD) Other changes:
	- Replaces the calculation of the center of a 3-point arc with a
simpler algorithm that doesn't use any transcendental functions.  (pggeom.c)
	- Cleans up comments, coding style, and other minor issues in
various files.  (pggeom.h, pgdraw.c, pgchar.c, pggeom.c, pgpoly.c,
pgvector.c)

Fileset of 2/26/97
==================

(LPD) Fixes bugs:
	- The main program had become incompatible with a library update.
(pcmain.c)
	- Downloaded TrueType fonts didn't allocate a char_glyph table.
(pcsfont.c)
	- TrueType fonts didn't set the pitch or height values in the font
structure, and didn't use those values for computing scale factors.
(pcfont.c, pcsfont.c)
	- 'system' was misspelled 'sytem' in one file.  (pginit.c)
	- A couple of functions didn't have prototypes.  (pcl5.mak,
pgdraw.c, pginit.c)

(LPD) Updates the makefiles to include the new version.mak file.
(bcpcl.mak, watcpcl.mak)

(LPD) Adds a printout of the maximum memory allocated; changes several
debugging printouts to be conditional on -Z:.  (pcmain.c)

(LPD) Adds a "client data" pointer to the state, to give callbacks more
flexibility; uses it to implement page counting.  (pcmain.h, pcstate.h,
pcpage.c, pcmain.c)

(rcd) Changes and fixes:

pcdraw.c:
	Add calls to break/restart underlining when cursor moves.

pcfont.c:
	Add underlining.
	Make backspace use real character width for overstrike centering.
	Use an accurate calculation of point size from pitch of fixed-pitch
		fonts.
	Initialize "built-in" fonts for testing.  Ensure that at least one
		font gets loaded.
pcfont.h:
	Remove global gs font directory.
	Add macros for break/restart underlining checks.

pcmain.c:
	Add calls to initialize "built in" fonts and symbol sets.

pcpage.c:
	Add calls to break/restart underlining at page boundary.

pcsfont.c:
	Move the gs-level font directory into the state.

pcstate.h:
	Move gs-level font directory into state.
	Add dictionaries for built-in fonts, symbol sets.
	Add state values for tracking underline.

pcstatus.c
	Adapt to new format of symbol sets.
	Do part of a merge of IDLIST code for use with symbol sets.
	Adapt to uniform format of built-in/soft font dictionaries.

pcsymbol.c:
	Create similar dictionaries for built-in, soft symbol sets, and
		adapt to this structure.
	Initialize "built in" symbol sets.

pcursor.c:
	Add calls to break/restart underlining when cursor moves.

(HAS) Changes and fixes:

	* pgstate.h: added comments about removing state variable that
	need to be removed.

	* pgdraw.c (hpgl_draw_current_path): added code to set current
	GL/2 position.

	* pgchar.c (hpgl_LB): replaced calls to print and update char with
 	one call to hpgl_process_char() see comments for
 	hpgl_process_char().

	* pgchar.c (hpgl_print_char): grouped hpgl_arc_to operation with
 	default in switch so we would get an "unsupported" character
 	operation with arc operations.

	* pgchar.c (hpgl_print_char): now set GL/2's state position
	correctly.  This was a bug before because the current position was
	not being extracted from device space, and the ctm is always
	modified to render characters.
	
	* pgchar.c (hpgl_CP): changed PU to use default value (no args)
	instead of current position.

	* pgchar.c (hpgl_LB): worked around design flaw by saving and
	restoring the state of the HPGL/2 pens in local variables.  This
	does not quite work as the variables state is not valid if hpgl_LB
	is reinvoked because of e_NeedData.  The solution is to save the
	pen state/status  using a stack.  (TODO).  This solution results
	in stray lines in the FTS tests.  

	* pgchar.c (hpgl_process_char): new routine that prints the
	character if it is printable and update the current position.

	* pgchar.c (hpgl_print_char): added code to process relative data
	and no argument data in stick font data code.

	* pgchar.c: added ctype.h.  Only printable characters are
	stored in the stick font character set table, we import
	isprint() from ctype.h

	* pgfont.c: (new file) stick font data to be accessed via data
	structures exported in pgfont.h.  This data is built from the CalComp
	font data using the program hp_symb.  pgfont.c should not be modified.

	* pgfont.h: (new file) interface to stick font data.  More compact
	representations are possible, for now the emphasis is on
	readability and debugging ease.

Fileset of 1/13/97
==================

(LPD) Removes some code that has been moved to the pl* library, and adjusts
some printouts to parallel PCL XL.  (pcmain.c)

(LPD) Adds a bounding box device for accurate detection of empty pages.
(pcmain.c, pcpage.c)

HP-GL/2
-------

Thu Jan  9 19:03:31 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgstate.h: removed implicit execution hack.

	* pginit.c (hpgl_default_coordinate_system): added this function to
	set up a default coordinate system for GL/2 see the lengthy
	comment prior to the comment for details.
	(hpgl_do_reset): rearranged initialization of coordinate system.
	got rid of implicit execution business.

Tue Jan  7 14:43:25 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgframe.c (pcl_vert_pic_frame_size_decipoints): change to add
	derive the vertical picture frame from the text length not the
	logical page length as previously implemented.

	* pgvector.c (hpgl_arc): added no argument case for P[ARDU].

Mon Jan  6 00:42:47 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgpoly.c (hpgl_EA): removed setting of pen_down in EA which was
	causing stray lines in fts borders.

Sun Jan  5 21:09:50 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgmand.h (hpgl_call): added empty function hpgl_error() to be called
	only when an error occurs.  Used for setting breakpoints - DEBUG only.

	* pgpoly.c (hpgl_wedge): added PU to current position at the
	beginning of the wedge, this guarantess the path begins with a
	moveto. 

Fileset of 1/8/97
=================

PCL
---

Fixes bugs:
	- (LPD) The Paper Source command (ESC & l <source> H) did an
unconditional page eject instead of a conditional one.  (pcpage.c)
	- (HAS) The computation of logical page size had the height and
width interchanged.  (pcdraw.c)

(LPD) Changes the second argument of pcl_end_page from a Boolean to an
enumerated type for easier reading.  (pcommand.h, pcjob.c, pcpage.c,
pcstatus.c, pcursor.c, rtmisc.c)

(LPD) Changes the name of the end_page procedure in the PCL state to
finish_page, to avoid confusion with pcl_end_page.  (pcstate.h, pcmain.c,
pcpage.c)

Sun Jan  5 1997 Dick Dunn (rcd@talisman.com)

    pcl5.mak
	Add definition, references to pcsymbol_h

    pldict.h
	Add pl_dict_length() to find active size of a dictionary

    pldict.c
	Add pl_dict_length() to find active size of a dictionary

    plfont.h
	Change condition on defining pl_load_tt_font to make it more robust.

    plsymbol.h
	Resolve common definitions of symbol maps _vs_ symbol sets.
	Add a length value for built-in symbol maps.
	Remove unneeded definitions.

    plsymbol.c
	Adapt to symbol-set/map distinction.
	Add procedures to find a symbol map and to check whether a font
	supports a symbol set.

    pcfont.h
	Make the decache-font procedure visible, since it must be called
	from some non-font code that forces re-selection.

    pcfont.c
	Make pcl_decache_font global (above).
	Implement correct tests for selection on symbol set.
	Record symbol map to be used.
	Move font-initialization hack here (from pcsfont.c).

    pcsfont.c
	Move font-initialization hack out to pcfont.c

    pcstatus.c
	Implement symbol-set listing.
	Implement listing of symbol sets for font-extended.

    pcsymbol.h
	New file: definitions for PCL5 symbol sets, not shared with XL.

    pcsymbol.c
	Move local definition of symbol set out to pcsymbol.h.
	Remove entity header from symbol set; reflects symbol set/map
	distinction.
	Decache fonts when symbol sets change.
	Add procedures to find a symbol map and to check whether a font
	supports a symbol set.

    pcmain.c
	Make built-in font initialization hack explicit.

    pcstate.h
	Add symbol maps to fonts selected and current font.

HP-GL/2
-------

Sun Jan  5 21:09:50 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgpoly.c (hpgl_wedge): added PU to current position at the
	beginning of the wedge, this guarantess the path begins with a
	moveto. 

Sat Jan  4 01:16:45 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_set_clipping_region): disabled clipping region
 	temporarily as it does not seem to be interacting with rotation
 	correctly.

	* pgframe.c (pcl_vert_pic_frame_size_decipoints): updated picture
	frame implicit

	* pgstate.h: added state variable to indicate implicit execution
	of Set Picture Frame Anchor Point.  The semantics differ explicit
	vs. implicit execution *** PETER *** you may want to handle this
	differently.  Please let me know.

Fri Jan  3 00:13:05 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_draw_current_path): removed unused variable which
	was used by gs_currentpoint() which has been removed.
	(hpgl_set_graphics_dash_state): fixed problem where gs dashed line
	state was being maintained while the hpgl state line state changed
	to solid.  *** PETER *** Should we do an "initgraphics" for
	pcl/gl/2 resets?

	* pgconfig.c (hpgl_RO): implemented, see code comments for
	potential problem.

	* pgstate.h: added state variable to indicate that we have the
	initial moveto in the path.  (see previous entry for details)

	* pgdraw.c (hpgl_draw_current_path): replaced call to get the
 	current point to use the state positiion in GL/2.  Change due to
 	preference, does not fix anything.
	(hpgl_draw_current_path): RO implementation revealed problem with
 	clearing the current path with only a moveto.  Does not work with
 	gs graphics as the path does not get created until later.
	(hpgl_add_point_to_path): added code to maintain state variable
 	pgls->g.have_first_moveto.

	* pgconfig.c (hpgl_RO): added default angle of 0 degrees, the
	previous arrangement had angle uninitialized if RO had no args.

	* pgvector.c (hpgl_PE): **PETER** the PE command must save and
 	restore the !relative pen state! upon entry and completion.  I
 	have added hpgl_save(restore)_pen_relative_state to pgmand.h.  As
	I understand things this must be done in the parser.  So I shall
	leave it to you for now.
	(hpgl_PE): corrected bug in PE code - the PE flag for SP must be
	ignored in polygon mode as SP is an illegal command.


Thu Jan  2 23:35:58 1997  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgstate.h (hpgl_save_pen_relative_state): provided parenthesis
	and renamed macros to save and restore postion, relative state and
	down state.

	* pgvector.c (hpgl_PU): added check for relative state.
	             (hpgl_PD):   "    "     "     "      "
		     (hpgl_PE): removed comments about assuming the parser
	             was not reentrant and reimplemented plotting commands
	             for polyline encoded vectors.

Mon Dec 30 14:27:16 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgvector.c (hpgl_AA): strange intermittent bug with gdb and
 	longjmp.  It seems that if a breakpoint is set on a function that
 	calls the parser and the parser needs more data it appears to
 	longjmp back to the breakpoint in the debugger.  Disabling the
 	breakpoint fixes the problem.
	             (hpgl_arc): missing parsing for chord angle.  Not
 	sure if I introduced this or if it was always that way.

Fileset of 12/31/96
===================

PCL
---

(LPD) Changes the API of the char_width procedure in a pl_font_t to take a
pl_symbol_map_t instead of a pl_symbol_map_collection_t, and also to take a
const gs_matrix *.  Removes the pl_symbol_map_collection_t type, since it
isn't needed anywhere right now.  (plfont.h, plsymbol.h)

HP-GL/2
-------

Mon Dec 30 01:04:19 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgvector.c (pe_args): added to pen selection /**** SELECT PEN ****/.
	(hpgl_PE): added drawing command.

	* pggeom.h (hpgl_3_colinear_points): fixed typo bug in
	hpgl_3_colinear_points().

	* pggeom.c (hpgl_compute_arc_coords): fixed bug in
	hpgl_compute_arc_coords, using sin() instead of cos().

Sun Dec 29 21:43:23 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgpoly.c (hpgl_wedge): implemented.
	(hpgl_EW): implemented.
	(hpgl_WG): implemented.

	* pggeom.c (general): HAS -- not enough error checking in pggeom.c.

	* pggeom.h: new routine hpgl_compute_vector_endpoints added to
	interface.  Calculates the endpoints of a vector given start
	point, an angle (degrees) and magnitude. (implementaion in pggeom.c)

	* pgpoly.c (hpgl_rectangle): corrected problem in building polygons
	because the macros only support the passing of two arguments as
	to hpgl_PD() function.  I have changed the calling sequences and
	not investigated the problem.  hpgl_rectangle appears to be
	implemented correctly now.
	(hpgl_wedge): implemented.

	* pgvector.c (hpgl_plot): replaced unimplemented return with 0
 	return.

Fri Dec 27 01:08:39 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgstate.h (hpgl_save_pen_position): added 2 new state variables
	to save the last position and up/down status, and new macros to
	access the variables

	* pgpoly.c (hpgl_rectangle): implemented.

Tue Dec 24 16:00:10 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_draw_current_path): updated
 	hpgl_draw_current_path to accept a second parameter, the rendering
 	mode.  Updated interface pgdraw.h and all callers to
 	hpgl_draw_current_path().

	* pgstate.h: renamed enumerated types to hpgl_rm_<type>
	(pcl_hpgl_state_s): removed hpgl_rendering_mode_t from the state
	as we will not need to maintain this variable.  It can be passed
	to the drawing routines passed by value.

	* pgpoly.c (hpgl_PM): changed to use boolean polygon mode.

	* pgparse.c (hpgl_process): changed to boolean polygon_mode.

	* *.c: removed hpgl_polygon_ignore().  The parser now deals with this.

Fileset of 12/24/96
===================

PCL
---

(LPD) Adds a pl_font_includes_char procedure for determining whether a given
character is defined in a given font and symbol set, and a
pl_font_char_width procedure for getting the character escapement of a given
character in a given font and symbol set.  MOST OF THE FUNCTIONALITY IS NOT
IMPLEMENTED YET, AND THE API IS SUBJECT TO CHANGE.  (plfont.h, plsymbol.h,
plchar.c)

HP-GL/2
-------

(LPD) Moves responsibility for ignoring non-polygon commands in polygon mode
into the parser:

	- Adds a 'polygon' flag to the command definition structure;
	removes the obsolete even_in_macro flag.  (pgmand.h)

	- Adds a HPGL_POLY_COMMAND macro, like HPGL_COMMAND except it defines
	a command that *is* allowed in polygon mode; removes the obsolete
	HPGL_SPECIAL_COMMAND macro.  (pgmand.h)

	- Changes the definition of all commands legal in polygon mode,
	and all commands with special argument parsing that must handle
	skipping in polygon mode themselves (CO, DT, LB, SM), from
	HPGL_COMMAND to HPGL_POLY_COMMAND.  (pgchar.c, pgconfig.c,
	pglfill.c, pgpoly.c, pgvector.c)

	- Changes the parser so that commands without the polygon flag are
	ignored in polygon mode.  (pgparse.c)

(LPD) Fixes a typo (mneumonics => mnemonics).  (pgmand.h)

(HAS):

Mon Dec 23 00:04:54 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_draw_current_path): added call to gs_fill for
 	polygon mode.

	* allfiles.c: added ignore macro to commands that are ignored in
	polygon mode, using the PCLTRM table on 21-41 "Polygon mode
	allowable commands".  Arguably this could be handled in the parser
	but it is more convenient to have the definition available when
	looking at the function that implements the mneumonic.
	
	* pgmand.h (hpgl_poly_ignore): macro to implement succesful return
	for commands that should be ignored in polygon mode.

Sun Dec 22 21:29:23 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgconfig.c (hpgl_DF): fixed bug due to HP documentation --
	uncovered by polygon implementation.  The DF command does the
	equivalent of PM0;PM2 clear the polygon buffer and exits polygon
	mode, not just PM as PCLTRM DF documentation states.

	* pgpoly.c (hpgl_PM): implemented.

	* pgdraw.c (hpgl_clear_current_path): implemented.
	(hpgl_close_current_path): implemented.

	* pgdraw.h: added hpgl_clear_current_path() and
	hpgl_close_current_path to the drawing interface.  These destroy
	and close paths respectively.  Used by PM.

	* pgdraw.c (hpgl_set_graphics_line_attribute_state): added warning
	message and fallback to vector if mode was not set to a know value.

Sat Dec 21 19:50:43 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_set_graphics_line_attribute_state): changes to
	set line attributes depending on what is being rendered -
	characters, lines, or polygons.
	

	* pgstate.h: added rendering mode of vector, polygon or
	character.  This affect line attributes see
	hpgl_set_graphics_line_attribute_state in pgdraw.c.

	* pgdraw.c (hpgl_set_clipping_region): set up clipping rectangle
	with gx_set_clip_to_rectangle();

Wed Dec 18 14:55:16 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgmand.h: removed hpgl_ok, we will use "return 0" for successful
	function termination.

	* pgvector.c (hpgl_CI): implemented circle.  (has bugs).

Sat Dec 14 13:45:27 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pginit.c (hpgl_do_reset): change to initialize picture frame and
	plot size before IN call.

Fileset of 12/13/96
===================

Procedures
----------

(LPD) Removes -O (optimization) from the default configuration in the PCL
makefile, because it creates too many problems for debugging.  (ugccpcl.mak)

PCL5
----

(LPD) Notes (here) the existence of the following barely-documented and
rarely-implemented PCL5e commands which we aren't planning to implement:
	ESC & k <0-7> W - Print Mode Selection (Color LJ5 Dev Guide p. 1-15)
	ESC & a <0-1> N - Negative Motion (ditto)
	ESC * r <0-2> Q - Raster Quality (ditto)
	ESC & o # Q - Mechanical Print Quality (Color LJ5 Dev Guide p. 1-18)
	ESC ( s # Q - Primary Font Quality (ditto)
	ESC ) s # Q - Secondary Font Quality (ditto)
	ESC & v # S - Text Color (ditto)
There is also one new command that we *should* implement:
	ESC & n <#bytes> W <data> - AlphaNumeric ID (LJ5 Dev Guide p. 23)

(LPD) Removes next_might_be_BS from the arguments of pcl_text, since it
doesn't provide any benefit.  (pcommand.h, pcfont.c, pcparse.c)

(LPD) Fixes bugs:
	- Using the current Ghostscript library caused a crash at startup,
because no halftone screen was set.  (pcmain.c)
	- Masked images didn't display, because they didn't initialize the
color correctly.  (rtraster.c)
	- An undeclared extern had crept in.  (pcsfont.c)

(RCD) Summary of changes:
	pcfont.c
		BS handling, elaboration of font scaling in pcl_text
	pcursor.c
		BS handling
	pcstate.h
		BS handling
	pcstatus.c
		minor tweak, avoid looking for FontName's that aren't there
	pcsfont.c
		hack to load some fonts
	pcpage.c
		tweak default right margin to nonzero so space works

HP-GL/2
-------

(HAS):

Thu Dec 12 14:07:04 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgconfig.c (hpgl_IP): fixed typo in IP.  Tracking the P2 y
 	coordinate was incorrect as it was using the X value instead of
 	the y value.
	(hpgl_picture_frame_coords): routine to derive the default picture
 	frame.
	(hpgl_IP): updated to use the new picture frame routine with
 	rounding ??? (see code).
	(hpgl_IW): Implemented the IW command, it is also used the new
 	picture frame routine.

	* pgdraw.c: set up picture frame and plot size scaling.

	* pgframe.c (pcl_hpgl_plot_horiz_size): modified plot size to
	to convert arguments to centipoints so that it is in the same
	units as the picture frame.  All the pcl commands in pgframe.c use
	centipoints internally now.

	* pgconfig.c (hpgl_IP): fixed location of P1 to be a function of
	the the pcl anchor points.

Wed Dec 11 00:28:56 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pcl5.mak (pginit_h): more missing dependencies.

	* pggeom.h (mm_2_plu): corrected typo in millimeter 2 plotter unit
	conversion (ARGH!).

	* pglfill.c (hpgl_PW): Changes to maintain pen width in plu's
	irrespective of current WU setting.  Also changed hpgl_WU to call
	hpgl_PW for setting default widths.

	* pgmand.h: Added gdebug.h and stdio.h (for gdebug) as they are
	used by the macro hpgl_call().

	Note there is a gcc specific variable to print out the name of the
	invoking function.  This needs to be #ifdef'd out or removed in
	the future.

	* pcl5.mak: fixed pgvector.c's dependency list, it was missing a
 	number of include files.  NOTE: gcc -M generates the dependencies
 	automatically.

Tue Dec 10 23:17:37 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgmand.h: added macro hpgl_call() that calls a function and
 	returns an error code if the code returned is less than 0.  Most
 	of the hpgl and gs functions return if the calling function is
 	less than 0 so this avoids cluttering up the code with the if
 	statement and debug code.

	Also added a status code - hpgl_ok.  

	* pgdraw.c and pgdraw.h: Extensive modifications for returning
	error codes.  
	
Mon Dec  2 13:36:04 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_set_graphics_dash_state): Needed to comment out
	gs_setdashadapt() and gs_setdotlength() as I don't have them.
	Would prefer an enumerated type for in lieue of the boolean
	parameter.

Mon Dec  2 00:05:38 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgdraw.c (hpgl_draw_current_path): removed attempted restore of
	pcl's ctm, as it was not correct and later discovered to be
	unnecessary.  

	* pgdraw.c (hpgl_add_point_to_path): used pcl_set_ctm() to
	initialize the pcl transformation that will be used to derive
	hpgl's transformation.

	* pginit.c (hpgl_do_reset): fixed duplicated block of code.

Sun Dec  1 14:25:29 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pggeom.c (hpgl_normalize_chord_angle): added floor() to truncate
	the angle.

	* pgdraw.c (hpgl_set_graphics_line_attribute_state): added large
	miter limit to do non beveled joins.  

	* pgdraw.c (hpgl_set_graphics_dash_state): uncommented dash API
	calls that are now supported in gs 4.34.

Wed Nov 27 17:21:50 1996  Henry Stiles  <henrys@meercat.dimensional.com>

	* pgconfig.c: removed second #include of gscoord.h.

	* pglfill.c (hpgl_PW): fixed logical error with pmax and pmin.
  	The previous code set pmax = pmin even if no pen was specified.
  	Now pmax is set to pmin if there is a pen number argument and the
 	argument is in the range 0 - pmax.

	* pcommand.h (value_set_float): changed name of macro parameter
	from fl to fr.  This macro is used in pginit.c to set up the
	picture frame commands.

	* pgmand.h: added comments to tell which file each HPGL/2 commands
	live in.

	* pgstate.h (pcl_hpgl_state_s): changed pen cap to ints.  A table
	in pgdraw.c is used to map the ints to appropriate gs graphics
	types.  Did this change a while back and did not document it.

	* pgdraw.h: changed *state to *pgls in prototypes.

	* pgdraw.h: missing prototype variable name y2 in hpgl_draw_line()
	declaration.

	* pgdraw.c: removed _a_ from from function names.

	* pgdraw.h: removed _a_ from from function names.

	* pgvector.h: removed _a_ from from function names.

	* pgdraw.c: Added gscoord.h for declarations of gs_initmatrix()
	and gs_scale().

	* pgdraw.c: Changed pu -> plu.

	* pggeom.h: Added #include math_h.h for sqrt.

	* pggeom.h: Changed pu -> plu.

	* pglfill.c: Added #include pgdraw.h for hpgl_draw_current_path()

	* pg*.[ch]: Removed blank lines at the end of files.  Bad habit of
	using CTRL-N in emacs at the bottom of files.

Fileset of 11/27/96
===================

PCL5
----

(LPD) Replaces pcl_plain_char with pcl_text, which takes a string rather
than a single character.  (pcommand.h, pcfont.c)

(LPD) Makes the parser look ahead to gather up runs of plain characters.
(pcparse.c)

(LPD) Fills in the pl_font_params_t properly for downloaded fonts.
(pcfont.h, pcsfont.c)

Fileset of 11/26/96
===================

PCL5
----

(RCD) Adds code for font selection.  (pcfont.c)

HP-GL/2
-------

(HAS) Makes all command procedures public so they can be called from other
commands.  (pgmand.h, pg*.c)

(HAS):

	* pginit.c (hpgl_do_reset): initialization of current hpgl/2 path
 	to empty.

	* pgdraw.h: corrected incorrect filename from copying template,
 	added #ifndef for multiple inclusion of .h, changed float ->
 	floatp for all arguments, made function names more readable, and
 	added comments for each prototype.

	* pggeom.h: same changes from pgdraw.h.  Added parenthesis to
 	macros so that expressions will evaluate correctly.

	* pgstate.h (pcl_hpgl_state_s): Moved statics that maintain the
 	current hpgl/2 path state to the hpgl state struct.

	* pgdraw.c (hpgl_add_point_to_path): Change to reflect previous
 	pgstate.h change.

	* pgdraw.c (hpgl_draw_current_path): Change to reflect previous
 	pgstate.h change.

	* pgdraw.c (hpgl_add_point_to_path): Added parameters to gs_func()
 	to make it a proper declaration.

	* pgdraw.c (hpgl_add_arc_to_path): removed function call to adjust
 	the chord angle.  Moved initializion of num_chords.

	* pggeom.c (hpgl_compute_arc_direction): changed algorithm to not
 	use trancendentals.  Also, only need the first and last point of
 	the arc for arguments.

	* pggeom.h: synced pggeom.h with pggeom.c change.

	* pgvector.c: style and indentation changes.

	* pginit.c (hpgl_do_reset): defaulted picture frame and plot size
 	to the pcl logical page size.

	* pgconfig.c (hpgl_DF): implemented.

	* pgconfig.c (hpgl_IN): implemented.

	* pginit.c (hpgl_do_reset): rewritten using mneumonics.  Still
	missing replot size.

	* pginit.h: removed hpgl_do_DF -- now there is just hpgl_DF().


	* pgmand.h: added hpgl mneumonics.  As many of the mneumonics are
	macros for collections of mneumonics it is useful to implement
	the macros in terms of the commands themselves.  This obviates the
	difficulty of having elements of the state data structure updated
	in different portions of the code. 


	* pglfill.c (hpgl_AC): done.


	* pglfill.c (hpgl_FT): Filled in default spacing and angle, though
	it is currently incomplete, see comments in the code.


	* pgdraw.c (hpgl_set_graphics_state): 
	Initialize have_path correctly. (OK - should work)
	Initialize pen number (SP) correctly. (OK)
	Initialize number pens (NP) correctly. (OK needs work)


	* pgdraw.c (hpgl_add_point_to_path): New code to initialize the
	current transformation matrix each time a gl/2 path is started.

	* pgdraw.c (hpgl_draw_current_path): initialize the graphics state
	each time we stroke or fill.


	* pgmand.h (hpgl_args_add_real):
	TODO: fix promotion to doubles.  ?? make scanner use doubles.


	* pglfill.c (hpgl_UL): UL with no parms executes LT;  Also code to
	update the both fixed and adaptive line patterns.

	* pgstate.h (pcl_hpgl_state_s): added boolean solid_line_type to
	the state.  False if a dashed line has been specified.

	* pgstate.h (pcl_hpgl_state_s): split line patterns into 2 data
 	structures one for adaptive and one for fixed.

	* pgdraw.c: gs graphics state updates for line types and line
 	attributes.

	* pgstate.h (pcl_hpgl_state_s): changed line joins and caps to
	type int instead of gs enumerated types.  The mapping to the gs
	types happens later.


	* pglfill.c (hpgl_LA): Added defaults for the no argument case.

----------------------------------------------------------------
